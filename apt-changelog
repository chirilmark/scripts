#!/usr/bin/perl -w
# apt-changelog version 1.1dev
# Copyright (c) 2001, 2007 Marius Gedminas <marius@gedmin.as>
# This program is Free Software licenced under GNU GPL v2+ et cetera.
#
# Before doing an apt-get dist-upgrade I often wonder, what the changes were.
# I wrote this script to help me answer this question.  It looks for deb files
# in /var/cache/apt/archives, extracts changelog.Debian (or just changelog),
# and displays it.
#
# Usage:
#   apt-get update && apt-get dist-upgrade -d -y	# to download packages
#   apt-changelog [-a|-c] <package>[=<version>] [...]
#
# Actually the first argument is a filename prefix.  The second argument (if
# it exists) is first transformed (s/:/%3a/g) and appended to the first one
# adding a _ in between.  Then all files beginning with this prefix are found
# and listed in a menu (if there are more than one file).
#
# Options
#   -a		show a menu of all files
#   -c		show a menu of all changelogs (files matching changelog* and
# 		NEWS*)
#  (no options)	show a menu of all Debian changelog (*changelog.Debian*) but
# 		if none found show all changelogs (like -c)
#
# When only one item is present, menu is not shown at all.
#
# $Id: apt-changelog.pl,v 1.6 2001/04/22 11:50:19 mg Exp $
use strict;

# Configuration
my $aptdir = "/var/cache/apt/archives";
my $pager = $ENV{PAGER} || "less";

# Cmdline processing
(my $progname = $0) =~ s{^.*/}{};

my $all_changelogs = 0;
my $all_files = 0;
if (@ARGV > 0 && $ARGV[0] eq "-a") {
    $all_files = 1;
    shift @ARGV;
} elsif (@ARGV > 0 && $ARGV[0] eq "-c") {
    $all_changelogs = 1;
    shift @ARGV;
}

die "use $progname [-a|-c] package[=version] [...]\n" unless @ARGV > 0;

for my $arg (@ARGV) {

    my $fnprefix = $arg;
    if ($fnprefix =~ s/=(.*)$//) {
	($fnprefix = "${fnprefix}_$1") =~ s/:/%3a/g;
    }

    # Find all matching files
    chdir($aptdir)
	or die "can't chdir to $aptdir: $!\n";
    my @fn = glob("${fnprefix}_*");
     @fn = glob("$fnprefix*") if @fn == 0;
    if (@fn == 0) {
	die "no packages match $fnprefix\n";
    }

    # Sort them by mtime
    @fn = map { $_->[0] }
	  sort { $a->[1] <=> $b->[1] }
	  map { [ $_, (stat $_)[9] ] } @fn;

    # Choose one
    my $choice = 0;
    if (@fn > 1) {
	print "$fnprefix is ambiguous:\n";
	my $n = 0;
	print ++$n, ") $_\n" for @fn;
	for(;;) {
	    print "select one: [$n] ";
	    $choice = <STDIN>;
	    print("\n"), exit if !defined $choice;
	    chomp($choice);
	    $choice =~ s/\s+$//;
	    $choice =~ s/^\s+//;
	    $choice = $n, last if $choice eq "";
	    next if ($choice !~ /^\d+$/);
	    last if ($choice > 0 && $choice <= $n);
	}
	$choice--;
    }
    my $fn = $fn[$choice];
    print "--- $fn ---\n";

    # Check for changelogs inside
    my @files = sort `dpkg-deb --fsys-tarfile "$fn" | tar tf -`;
    chomp for @files;
    my @changelogs;
    if ($all_files) {
	@changelogs = @files;
    } else {
	@changelogs = grep m'/changelog.Debian', @files	if !$all_changelogs;
	@changelogs = grep m'/(changelog|NEWS)', @files	if @changelogs == 0;
    }
    if (@changelogs == 0) {
	print "no changelogs found\nfull listing of files follows:\n",
	      join("\n", @files), "\n";
	exit 1;
    }
    $choice = 0;
    if (@changelogs > 1) {
	print "changelogs found:\n";
	my $n = 0;
	printf "%3d) $_\n", ++$n for @changelogs;
	for(;;) {
	    print "select one: [$n] ";
	    $choice = <STDIN>;
	    print("\n"), exit if !defined $choice;
	    chomp($choice);
	    $choice =~ s/\s+$//;
	    $choice =~ s/^\s+//;
	    $choice = $n, last if $choice eq "";
	    next if ($choice !~ /^\d+$/);
	    last if ($choice > 0 && $choice <= $n);
	}
	$choice--;
    }
    my $changelog = $changelogs[$choice];

    # Do we need gunzip?
    my $gunzip = "";
    if ($changelog =~ /\.gz$/) {
	$gunzip = "| gunzip";
    }

    # Look up the current version
    my $pkgname = $fn;
    $pkgname =~ s/_.*//;

    # Execute
    system("(dpkg-query -W -f='--- \${PackageSpec} \${Version} \${Status} ---\n' $pkgname; echo \"--- $fn ---\"; echo \"$changelog\"; echo; dpkg-deb --fsys-tarfile \"$fn\" | tar xOf - \"$changelog\" $gunzip) | $pager");
}
